//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gestion_de_Banque
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class banqueEntities : DbContext
    {
        public banqueEntities()
            : base("name=banqueEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Client> Clients { get; set; }
        public virtual DbSet<Compte> Comptes { get; set; }
        public virtual DbSet<Mouvement> Mouvements { get; set; }
        public virtual DbSet<Virement> Virements { get; set; }
    
        public virtual int spDepot(Nullable<int> numCompte, Nullable<decimal> montant)
        {
            var numCompteParameter = numCompte.HasValue ?
                new ObjectParameter("numCompte", numCompte) :
                new ObjectParameter("numCompte", typeof(int));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spDepot", numCompteParameter, montantParameter);
        }
    
        public virtual int spRetrait(Nullable<int> numCompte, Nullable<decimal> montant)
        {
            var numCompteParameter = numCompte.HasValue ?
                new ObjectParameter("numCompte", numCompte) :
                new ObjectParameter("numCompte", typeof(int));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spRetrait", numCompteParameter, montantParameter);
        }
    
        public virtual int spVerer(Nullable<int> numDebiteur, Nullable<int> numCrediteur, Nullable<decimal> montant)
        {
            var numDebiteurParameter = numDebiteur.HasValue ?
                new ObjectParameter("numDebiteur", numDebiteur) :
                new ObjectParameter("numDebiteur", typeof(int));
    
            var numCrediteurParameter = numCrediteur.HasValue ?
                new ObjectParameter("numCrediteur", numCrediteur) :
                new ObjectParameter("numCrediteur", typeof(int));
    
            var montantParameter = montant.HasValue ?
                new ObjectParameter("montant", montant) :
                new ObjectParameter("montant", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spVerer", numDebiteurParameter, numCrediteurParameter, montantParameter);
        }
    }
}
